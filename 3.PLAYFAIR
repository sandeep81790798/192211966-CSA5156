#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define SIZE 5

void generateMatrix(char key[], char matrix[SIZE][SIZE]) {
    int i, j, k, len = strlen(key);
    int alpha[26] = {0};
    alpha['J' - 'A'] = 1;

    for (k = 0, i = 0, j = 0; k < len; k++) {
        if (!alpha[toupper(key[k]) - 'A']) {
            matrix[i][j++] = toupper(key[k]);
            alpha[toupper(key[k]) - 'A'] = 1;
            if (j == SIZE) { j = 0; i++; }
        }
    }

    for (k = 0; k < 26; k++) {
        if (!alpha[k]) {
            matrix[i][j++] = 'A' + k;
            if (j == SIZE) { j = 0; i++; }
        }
    }
}

void formatPlaintext(char text[]) {
    for (int i = 0; text[i]; i++) {
        text[i] = toupper(text[i]);
        if (text[i] == 'J') text[i] = 'I';
        if (!isalpha(text[i])) {
            memmove(&text[i], &text[i + 1], strlen(text) - i);
            i--;
        }
    }

    for (int i = 0; text[i] && text[i + 1]; i += 2) {
        if (text[i] == text[i + 1]) {
            memmove(&text[i + 1], &text[i], strlen(text) - i + 1);
            text[i + 1] = 'X';
        }
    }
    if (strlen(text) % 2 != 0) strcat(text, "X");
}

void findPosition(char matrix[SIZE][SIZE], char ch, int* row, int* col) {
    for (int i = 0; i < SIZE; i++)
        for (int j = 0; j < SIZE; j++)
            if (matrix[i][j] == ch) {
                *row = i; *col = j;
                return;
            }
}

void playfairEncrypt(char text[], char matrix[SIZE][SIZE]) {
    int row1, col1, row2, col2;
    for (int i = 0; text[i] && text[i + 1]; i += 2) {
        findPosition(matrix, text[i], &row1, &col1);
        findPosition(matrix, text[i + 1], &row2, &col2);
        if (row1 == row2) {
            text[i] = matrix[row1][(col1 + 1) % SIZE];
            text[i + 1] = matrix[row2][(col2 + 1) % SIZE];
        } else if (col1 == col2) {
            text[i] = matrix[(row1 + 1) % SIZE][col1];
            text[i + 1] = matrix[(row2 + 1) % SIZE][col2];
        } else {
            text[i] = matrix[row1][col2];
            text[i + 1] = matrix[row2][col1];
        }
    }
}

int main() {
    char key[100], text[100];
    char matrix[SIZE][SIZE];

    printf("Enter keyword: ");
    scanf("%s", key);
    printf("Enter plaintext: ");
    scanf("%s", text);

    generateMatrix(key, matrix);
    formatPlaintext(text);
    playfairEncrypt(text, matrix);

    printf("Encrypted text: %s\n", text);
    return 0;
}
